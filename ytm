#!/usr/bin/env python3

from bs4 import BeautifulSoup
from urllib.request import Request, urlopen
import os, sys
import socket
import time
import argparse
import shutil

NUM_MUSIC = None
AUTO = False
CHANNELS = []
IMPORT_CONF = True
LOCATION = 'Music/'
CH_URL = 'https://www.youtube.com/user/%(channel)s/videos'
YT_URL = 'https://www.youtube.com'

def set_args():
	global NUM_MUSIC, AUTO, IMPORT_CONF, CHANNELS
	parser = argparse.ArgumentParser(description='Youtube music downloader')
	parser.add_argument("-n", "--number", help="Number of music per channel [1-30]", type=int, nargs='?', const=1)
	parser.add_argument("-a", "--auto", help="Automatically download new music that are not already downloaded", action='store_true')
	parser.add_argument("-u", "--user", help="Download music from a specified user", type=str)
	args = parser.parse_args()

	NUM_MUSIC = args.number

	if args.auto:
		AUTO = args.auto
		NUM_MUSIC = 30
	else:
		NUM_MUSIC = 1

	if args.user:
		IMPORT_CONF = False
		CHANNELS.append(args.user)
	if args.number:
		if args.number > 30:
			NUM_MUSIC = 30
		else:
			NUM_MUSIC = args.number

def print_banner():
	columns = shutil.get_terminal_size().columns
	print("Youtube Music Downloader".center(columns))
	print('-'*columns)

def get_channels():
	if IMPORT_CONF:
		try:
			with open('ytm-channels.conf', 'r') as conf:
				for i in conf.readlines():
					ch = i.strip('\n')
					ch = ch.strip(' ')
					CHANNELS.append(ch)
		except:
			print('Add Youtube channels to \'ytm-channels.conf\'')
			sys.exit()

def parse_music_info(channel):
	music = []
	url = CH_URL % vars()
		
	r = None
	try:
		r = urlopen(url)
	except Exception:
		print('[!] Connection failed')
		sys.exit()
	r = r.read().decode('utf-8')
	
	soup = BeautifulSoup(r, 'lxml')
	videos = soup.find_all('div', class_="yt-lockup-content")
	channel_title = soup.find('div', class_="primary-header-upper-section").find('a')['title']
	
	print('\n[*] '+channel_title+' ('+channel+'): ')
	
	index = 0
	for video in videos[0:NUM_MUSIC]:
		a = video.find('a')
		link = a['href']
		titl = a['title']
		fname = titl+'-'+link[9:]+'.mp3'
		fname = file_name_fix(fname)
		link = YT_URL+link
		
		if os.path.isfile(LOCATION+fname):
			conf = 'n'
			print('   [!] '+titl+' is already downloaded')
			if AUTO or not IMPORT_CONF:
				break
			continue
		else:
			music.append(index)
		
		index = index + 1

	for i in reversed(music):
		a = videos[i]
		b = a.find('a')
		link = b['href']
		titl = b['title']
		fname = titl+'-'+link[9:]+'.mp3'
		fname = file_name_fix(fname)
		link = YT_URL+link
		
		yield (titl, fname, link)

def file_name_fix(fname):
	if "|" in fname:
		fname = fname.replace("|","_")
	return fname

def downloader(titl, fname, link):
	print('   [!] Downloading '+titl)
	os.system("youtube-dl -q --console-title -f bestaudio --ffmpeg-location /usr/bin/ffmpeg -o '"+ LOCATION +"%(title)s-%(id)s.%(ext)s' -x --audio-quality 128K --audio-format mp3 --add-metadata --embed-thumbnail -i "+ link)
	if os.path.isfile(LOCATION+fname):
		print('      [!] Download complete')
	else:
		print('      [!] Download failed')

def main():
	os.system('clear')
	set_args()
	get_channels()

	print_banner()
	print("  Number of music per channel [Most recent]:",NUM_MUSIC)

	for channel in CHANNELS:
		for titl, fname, link in parse_music_info(channel):
			downloader(titl, fname, link)

if __name__=='__main__':
	main()
	sys.exit()